dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
library(readr)
Data <- read_csv("Documents/Code/GitKraken/ML/R/Data.csv")
View(Data)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
source('~/Documents/Code/GitKraken/ML/R/preprocessing_missing_data.R')
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
# Data Preprocessing
# Importing the dataset
dataset = read.csv('Data.csv')
# Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Data Preprocessing
# Importing the dataset
dataset = read.csv('Data.csv')
# Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
setwd("~/Documents/Code/GitKraken/ML/R")
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), # is dataset NULL
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), #REPLACE WITH ave-rage (mean)
dataset$Salary)
View(Data)
View(dataset)
